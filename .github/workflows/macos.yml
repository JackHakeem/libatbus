# setup @see https://help.github.com/en/articles/workflow-syntax-for-github-actions
# environment @see https://help.github.com/en/articles/software-in-virtual-environments-for-github-actions
#                  https://help.github.com/en/articles/virtual-environments-for-github-actions
# example     @see https://github.com/actions/toolkit/blob/master/.github/workflows/workflow.yml
name: Linux Building
# This workflow is triggered on pushes to the repository.
on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: # Array of patterns that match refs/heads
      # - master # Push events on master branch
      - dev
  # schedule:
  #  - cron:  0 * * * *

jobs:
  build: # job id, can be any string
    # Job name is Build And Publish
    name: Build And Publish
    # This job runs on Linux
    strategy:
      matrix:
        os: [macos-latest]
        cc: [clang]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@master # https://github.com/actions/actions
      - name: Build
        shell: bash
        run: |
          USE_CC=${{ matrix.cc }}
          USE_CXX="${USE_CC/%clang/clang++}"
          USE_CXX="${USE_CXX/%gcc/g++}"
          mkdir -p "$GITHUB_WORKSPACE/build_jobs_dir_linux"
          cd "$GITHUB_WORKSPACE/build_jobs_dir_linux"
          cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DPROJECT_ENABLE_TOOLS=ON -DATBUS_MACRO_ABORT_ON_PROTECTED_ERROR=ON -DPROJECT_GIT_CLONE_REMOTE_ORIGIN_DISABLE_SSH=ON
          cmake --build . -j
      - name: Sample and Tests
        shell: bash
        run: |
          cd "$GITHUB_WORKSPACE/build_jobs_dir_linux"
          ctest . -V
